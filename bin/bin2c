#!/usr/bin/env perl

use warnings;
use strict;

my $guard = shift;
my $variable = shift;
my $source = shift;
open(my $file, '<', $source) or die "open: $!";
my (@l, @v);
while (my $in = <$file>) {
        for my $b (split //, $in) {
                if (@l == 8) {
                        push @v, [@l];
                        @l = ();
                }
                push @l, $b;
        }
}
close $file;
push @v, [@l] if scalar @l;

my $bin = $0;
$bin =~ s/.*\///;
print "/* Although auto-generated by $bin from `$source', for slightly */\n";
print "/* improved legibility this comment wastes space so that the first */\n";
print "/* line of each data block in $variable is a multiple of 9. */\n";
print "\n";
print "#ifndef $guard\n";
print "#define $guard\n";
print "\n";
print "char ${variable}[] = {\n";
sub draw {
        print " " x 8, join ', ', map { sprintf '0x%02x', ord $_ } @{ shift() };
}
for my $l (1..$#v) {
        draw $v[$l - 1];
        print ",\n";
        print "\n" unless $l % 8;
}
draw $v[-1];
print ",\n\n";
draw [ chr 0 ];
print " /* Just in case. */\n";
print "};\n";
print "\n";
print "long ${variable}_Length = ", ((@v - 1) * 8 + @{$v[-1]}), ";";
print " /* Not including appended '\\0'. */\n";
print "\n";
print "#endif /* $guard */\n";
